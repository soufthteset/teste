-- Carregar a biblioteca Orion 
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/soufthteset/teste/refs/heads/main/source-testess')))()
local Window = OrionLib:MakeWindow({Name = "SOUFTH MENU üéÑ", HidePremium = false, SaveConfig = true, ConfigFolder = "TestConfig"})

-- Criar a aba ESP
local Tab1 = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Vari√°veis para controle do ESP
local espEnabled = false
local espLines = {}
local espBillboards = {}
local selectedColor = Color3.new(1, 0, 0) -- Cor padr√£o: vermelho
local espRadius = 500 -- Raio padr√£o (Valor inicial entre 200 e 5,000,000)
local showDistance = false -- Flag para mostrar a dist√¢ncia

-- Fun√ß√£o para criar a InfoBox
local function createInfoBox(funcName, status)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = funcName,
        Text = status,
        Duration = 5
    })
end

-- Fun√ß√£o para ativar ou desativar o ESP
local function toggleESP()
    espEnabled = not espEnabled

    if espEnabled then
        -- Ativar ESP
        local localPlayer = game.Players.LocalPlayer
        local localCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()

        -- Criar linhas e nomes para todos os jogadores
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                -- Criar linha
                local line = Drawing.new("Line")
                line.Thickness = 1
                line.Color = selectedColor
                line.Visible = true

                -- Criar nome acima do jogador
                local billboard = Instance.new("BillboardGui", player.Character)
                billboard.Size = UDim2.new(0, 100, 0, 50)
                billboard.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.AlwaysOnTop = true

                local nameLabel = Instance.new("TextLabel", billboard)
                nameLabel.Size = UDim2.new(1, 0, 1, 0)
                nameLabel.Text = player.Name
                nameLabel.TextColor3 = Color3.new(1, 1, 1) -- Nome sempre branco
                nameLabel.BackgroundTransparency = 1
                nameLabel.Font = Enum.Font.SourceSansBold
                nameLabel.TextSize = 14

                -- Guardar linha e billboard em tabelas para controle
                espLines[player] = line
                espBillboards[player] = {billboard = billboard, nameLabel = nameLabel}
            end
        end

        -- Atualizar a posi√ß√£o das linhas e nomes continuamente
        game:GetService("RunService").Heartbeat:Connect(function()
            if not espEnabled then return end

            for player, line in pairs(espLines) do
                local localCharacter = game.Players.LocalPlayer.Character
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") then
                    local localPos, onScreen1 = workspace.CurrentCamera:WorldToViewportPoint(localCharacter.HumanoidRootPart.Position)
                    local targetPos, onScreen2 = workspace.CurrentCamera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)

                    -- Calcular a dist√¢ncia entre os jogadores
                    local distance = (localCharacter.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude

                    -- Exibir linha e nome apenas se a dist√¢ncia estiver dentro do raio configurado
                    if onScreen1 and onScreen2 and distance <= espRadius then
                        -- Atualizar a posi√ß√£o da linha
                        line.From = Vector2.new(localPos.X, localPos.Y)
                        line.To = Vector2.new(targetPos.X, targetPos.Y)
                        line.Visible = true

                        -- Atualizar o nome do jogador ou a dist√¢ncia dependendo da op√ß√£o
                        if espBillboards[player] then
                            local nameLabel = espBillboards[player].nameLabel
                            if showDistance then
                                nameLabel.Text = string.format("%s - %.1f m", player.Name, distance)
                            else
                                nameLabel.Text = player.Name
                            end
                            espBillboards[player].billboard.Enabled = true
                        end
                    else
                        -- Desabilitar a linha e o nome se estiverem fora do raio
                        line.Visible = false
                        if espBillboards[player] then
                            espBillboards[player].billboard.Enabled = false
                        end
                    end
                else
                    line.Visible = false
                    if espBillboards[player] then
                        espBillboards[player].billboard.Enabled = false
                    end
                end
            end
        end)

    else
        -- Desativar ESP e remover linhas e nomes
        for _, line in pairs(espLines) do
            line:Remove()
        end
        for _, billboardData in pairs(espBillboards) do
            billboardData.billboard:Destroy()
        end
        espLines = {}
        espBillboards = {}
    end

    -- Exibir a InfoBox de Sucesso
    createInfoBox("ESP", "ESP ativado/desativado com sucesso!")
end

-- Bot√£o para ativar/desativar ESP
Tab1:AddButton({
    Name = "ESP Lines",
    Callback = function()
        toggleESP()
    end
})

-- Checkbox para mostrar ou esconder a dist√¢ncia
Tab1:AddToggle({
    Name = "Mostrar Dist√¢ncia",
    Default = false,
    Callback = function(state)
        showDistance = state
    end
})

-- Dropdown para selecionar a cor da linha
local colors = {
    {Name = "Red", Color = Color3.new(1, 0, 0)},
    {Name = "Green", Color = Color3.new(0, 1, 0)},
    {Name = "Blue", Color = Color3.new(0, 0, 1)},
    {Name = "Yellow", Color = Color3.new(1, 1, 0)},
    {Name = "White", Color = Color3.new(1, 1, 1)},
    {Name = "Purple", Color = Color3.new(0.5, 0, 0.5)},
    {Name = "Cyan", Color = Color3.new(0, 1, 1)},
    {Name = "Orange", Color = Color3.new(1, 0.5, 0)}
}

local colorOptions = {}
for _, col in pairs(colors) do
    table.insert(colorOptions, col.Name)
end

Tab1:AddDropdown({
    Name = "Selecione a Cor da Linha ESP",
    Options = colorOptions,
    CurrentOption = "Red",
    Flag = "ESPLineColor",
    Callback = function(option)
        for _, col in pairs(colors) do
            if col.Name == option then
                selectedColor = col.Color
                break
            end
        end
    end
})

-- Slider para ajustar o raio do ESP (m√≠nimo 200, m√°ximo 5,000,000)
Tab1:AddSlider({
    Name = "Raio do ESP",
    Min = 200,
    Max = 5000000,
    Default = espRadius,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 10,
    Callback = function(value)
        espRadius = value
    end
})

-- Criar a aba HUBS
local Tab2 = Window:MakeTab({
    Name = "HUBS",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Fun√ß√£o para criar a InfoBox
local function createInfoBox(funcName, status)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = funcName,
        Text = status,
        Duration = 5
    })
end

-- Fun√ß√µes para FE SCRIPTS
local function onButtonClick()
    createInfoBox("InfiniteYield", "Carregando InfiniteYield...")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    createInfoBox("InfiniteYield", "InfiniteYield carregado com sucesso!")
end

local function InvisExec()
    createInfoBox("Fe Invisible", "Carregando Fe Invisible...")
    loadstring(game:HttpGet("https://pastebin.com/raw/c3vgfjhn"))()
    createInfoBox("Fe Invisible", "Fe Invisible carregado com sucesso!")
end

local function F3XLOADER()
    createInfoBox("F3X", "Carregando F3X...")
    loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
    createInfoBox("F3X", "F3X carregado com sucesso!")
end

local function DEXLOAD()
    createInfoBox('Dex', 'Carregando Dex...')
    loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
    createInfoBox('Dex', 'Dex carregado com sucesso!')
end

local function fakeo()
    createInfoBox("FakeOP", "Carregando FakeOP...")
    loadstring(game:HttpGet("https://pastebin.com/raw/DvAtXywF"))()
    createInfoBox("FakeOP", "FakeOP carregado com sucesso!")
end

-- Bot√µes para os FE SCRIPTS na aba HUBS
Tab2:AddButton({
    Name = "Infinite Yield",
    Callback = onButtonClick
})

Tab2:AddButton({
    Name = "Fe Invisible",
    Callback = InvisExec
})

Tab2:AddButton({
    Name = "Aimbot",
    Callback = fakeout
})

Tab2:AddButton({
    Name = "F3X",
    Callback = F3XLOADER
})

Tab2:AddButton({
    Name = "Dex",
    Callback = DEXLOAD
})

Tab2:AddButton({
    Name = "FakeOP",
    Callback = fakeo
})

-- Criar a aba TROLL
local Tab3 = Window:MakeTab({
    Name = "TROLL",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Criar a aba Brookhaven
local Tab4 = Window:MakeTab({
    Name = "Brookhaven",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Fun√ß√£o para carregar o Rael Hub
Tab4:AddButton({
    Name = "Rael Hub",
    Callback = function()
        createInfoBox("Rael Hub", "Carregando Rael Hub...")
        loadstring(game:HttpGet("https://pastebin.com/raw/uZm5LCZb"))()
        createInfoBox("Rael Hub", "Rael Hub carregado com sucesso!")
    end
})

-- O restante do c√≥digo segue conforme estava, incluindo as fun√ß√µes para TROLL, ESP, etc.
